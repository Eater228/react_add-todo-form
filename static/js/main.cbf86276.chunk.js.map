{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialState","element","newTodoId","Math","max","App","useState","setTodos","setUserId","setTitile","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","trim","newTodo","prev","addTodo","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbf86276.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../interface/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../interface/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <>\n      <article\n        data-id={id}\n        className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import { Todo } from '../../interface/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","/* eslint-disable */\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './interface/User';\nimport { Todo } from './interface/Todo';\n\nconst getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst initialState: Todo[] = todosFromServer.map((element) => ({\n  ...element,\n  user: getUserById(element.userId),\n}))\n\nconst newTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialState);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitile] = useState('')\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const reset = () => {\n    setTitile('');\n    setUserId(0);\n  }\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {...todo, id: newTodoId(todos)}\n\n    setTodos(prev => [...prev, newTodo]);\n  }\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  }\n\n  const handleTitelChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitile(event.target.value)\n    setHasTitleError(false)\n  }\n\n  const handelSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    addTodo({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    })\n\n    reset()\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handelSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitelChange}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos}/>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}